plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.9.6'
    id "io.freefair.lombok" version "6.0.0-m2"
}

allure {
    report {
        version.set("2.19.0")
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set("2.19.0")
            }
        }
    }
}

repositories {
    mavenCentral()
}

def selenideVersion = "6.19.1",
    restAssuredVersion = "5.3.1",
    allureVersion = "2.25.0",
    junitVersion = "5.11.4",
    assertjVersion = "3.24.2"

dependencies {
    testImplementation(
            "com.codeborne:selenide:$selenideVersion",
            'io.qameta.allure:allure-selenide:2.17.3',
            'org.aspectj:aspectjweaver:1.9.23',
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "io.qameta.allure:allure-attachments:${allureVersion}",
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "io.rest-assured:json-schema-validator:$restAssuredVersion",
            'org.slf4j:slf4j-simple:2.0.7',
            "org.assertj:assertj-core:$assertjVersion"
    )
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    useJUnitPlatform()
    systemProperty "USERNAME", System.getProperty("USERNAME", "")
    systemProperty "PASSWORD", System.getProperty("PASSWORD", "")
    systemProperties (System.getProperties())


    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task Smoke_test(type: Test) {
    useJUnitPlatform {
        includeTags("Smoke")
    }
}